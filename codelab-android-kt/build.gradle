plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdk build_versions.compile_sdk

    defaultConfig {
        minSdk build_versions.min_sdk
        targetSdk build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"


        // Test code below

        def testStringField = "Test_String_Config_Field"
        buildConfigField("String", "STRING_BUILD_CONFIG_FIELD", "\"${testStringField}\"")

        buildConfigField("Boolean", "BOOLEAN_BUILD_CONFIG_FIELD", "true")

        def hasConfigVal = gradle.startParameter.projectProperties["hasConfig"]?.toBoolean()
        buildConfigField("Boolean", "HAS_CONFIG", "$hasConfigVal")
    }

    buildTypes {

        debug{

        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility build_versions.source_compatibility
        targetCompatibility build_versions.target_compatibility
    }
    kotlinOptions {
        jvmTarget = build_versions.kt_jvm_target
    }

    viewBinding {
        enabled = true
    }
}

dependencies {

    testImplementation deps.junit
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation deps.appcompatX
    // log table
    implementation deps.picnic
    implementation deps.retrofit

    api deps.bundles.widgets
    api deps.bundles.ktx
    api deps.androidMaterial
    api project(":codelab-kt")
    api deps.bundles.anko

    compileOnly deps.viewbinding
    implementation project(':module-inverse-deps-solution')
}
